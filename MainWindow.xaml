<Window x:Class="ImageConverterPlus.MainWindow"
        x:Name="MainWindowWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageConverterPlus"
        xmlns:vm="clr-namespace:ImageConverterPlus.ViewModels"
        xmlns:controls="clr-namespace:ImageConverterPlus.Controls"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        xmlns:drawing="clr-namespace:System.Drawing;assembly=System.Drawing.Common"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="SE Image Converter+"
        Height="450"
        Width="750"
        BorderThickness="0.5"
        BorderBrush="#404040"
            fw:AcrylicWindow.Enabled="True"
            fw:AcrylicWindow.NoiseOpacity="0"
            fw:AcrylicWindow.AcrylicAccentState="BlurBehind"
            fw:AcrylicWindow.TintOpacity="0"
            fw:AcrylicWindow.TintColor="#202020"
            fw:AcrylicWindow.FallbackColor="Transparent"
            fw:AcrylicWindow.ExtendViewIntoTitleBar="True"
        ResizeMode="CanMinimize"
        AllowsTransparency="True"
        WindowStyle="None"
        ContextMenuService.IsEnabled="False"
        RenderOptions.BitmapScalingMode="HighQuality">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <Label x:Key="custombrushlabelkey" x:Name="custombrushlabel" Foreground="#DDDDDD" />
        <SolidColorBrush x:Key="Brush_Accent" Color="#25FFFFFF" />
    </Window.Resources>

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="165" />
            <ColumnDefinition Width="165" />
            <ColumnDefinition Width="410" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="54" />
            <RowDefinition Height="300" />
            <RowDefinition Height="64" />
        </Grid.RowDefinitions>
        
        <!--Window Background-->
        <Rectangle x:Name="backgroundbrush" Grid.Row="1" Grid.Column="0" Grid.RowSpan="6" Grid.ColumnSpan="4" Fill="#202020">
            <Rectangle.Style>
                <Style TargetType="Rectangle">
                    <Setter Property="Opacity" Value="1" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                            <Setter Property="Opacity" Value="0.9" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>

        <!--Title Bar-->
        <Rectangle x:Name="AppTitleBackground" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" Fill="#505050">
            <Rectangle.Style>
                <Style TargetType="Rectangle">
                    <Setter Property="Opacity" Value="1" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                            <Setter Property="Opacity" Value="0.9" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" FlowDirection="LeftToRight" Orientation="Horizontal">
            <Image x:Name="AppTitleIcon" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0,3,0" Height="16" Width="16" Source="/icon16.png" Stretch="Uniform"
                   IsHitTestVisible="True" WindowChrome.IsHitTestVisibleInChrome="True" MouseLeftButtonDown="AppTitleIcon_MouseLeftButtonChanged" 
                   MouseLeftButtonUp="AppTitleIcon_MouseLeftButtonChanged" LostMouseCapture="AppTitleIcon_LostMouseCapture">
                <Image.ContextMenu>
                    <ContextMenu Style="{StaticResource CustomMenu}">
                        <MenuItem Style="{StaticResource CustomMenuItem}"
                                  Header="Open Log"
                                  Command="{Binding OpenLogsCommand}">
                            <MenuItem.ToolTip>
                                <ToolTip Style="{StaticResource CustomToolTip}" x:Name="OpenLogBtnToolTip" />
                            </MenuItem.ToolTip>
                        </MenuItem>
                        <MenuItem Style="{StaticResource CustomMenuItem}" Header="App Directory" Click="OpenAppDirBtn_Click" x:Name="OpenAppDirBtn"
                                  ToolTip="Open this application's base directory in File Explorer.">
                        </MenuItem>
                    </ContextMenu>
                </Image.ContextMenu>
            </Image>
            <Label x:Name="AppTitleText" Content="SE Image Converter+" VerticalAlignment="Center" Margin="0" Foreground="#FFFFFF" />
        </StackPanel>
        <Border BorderThickness="0,1,0,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" BorderBrush="#151515" Opacity="0.5" />

        <!--big title-->
        <Label x:Name="AppBigTitle" Content="SE Image Converter+" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="23" 
               Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Foreground="White" />

        <!--Background Color Rectangle-->
        <Rectangle Grid.Row="1" Grid.Column="3" Grid.RowSpan="4" x:Name="ImagePreviewBackground" Fill="#101010" 
                   Height="350" Width="350" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.25"
                   AllowDrop="True" PreviewDrop="Preview_PreviewDrop"
                   ToolTip="Converted Image Preview">
            <Rectangle.ContextMenu>
                <ContextMenu Style="{StaticResource CustomMenu}">
                    <MenuItem Style="{StaticResource CustomMenuItem}"
                              Header="Convert From Clipboard" Click="PasteFromClipboard"
                              ToolTip="If the clipboard contains an image,&#x0a;converts it with currently selected settings">
                    </MenuItem>
                </ContextMenu>
            </Rectangle.ContextMenu>
        </Rectangle>
        <!--Image Preview-->
        <TextBlock x:Name="ImagePreviewTextBlock" Text="Image Preview" Grid.Row="5" Grid.Column="3" Grid.RowSpan="2" Foreground="White"
                   HorizontalAlignment="Center" VerticalAlignment="Bottom" Height="30" Margin="0,0,0,30" FontSize="15" />
        <Border Grid.Row="1" Grid.Column="3" Grid.RowSpan="4" x:Name="ImagePreviewBorder" Background="Black" Visibility="Hidden"
                Height="350" Width="350" HorizontalAlignment="Center" VerticalAlignment="Center"
                PreviewDrop="Preview_PreviewDrop" ClipToBounds="True" AllowDrop="True">
            <Border.ContextMenu>
                <ContextMenu Style="{StaticResource CustomMenu}">
                    <MenuItem Style="{StaticResource CustomMenuItem}" Header="Copy to Clipboard"
                              Command="{Binding CopyImageToClipboardCommand}" />
                    <MenuItem Style="{StaticResource CustomMenuItem}" Header="Convert From Clipboard"
                              Click="PasteFromClipboard" /> 
                    <MenuItem Style="{StaticResource CustomMenuItem}" Header="Reset Zoom &amp; Pan"
                              Command="{Binding ResetZoomAndPanCommand}" />
                    <MenuItem Style="{StaticResource CustomMenuItem}" Header="Remove" Click="RemovePreview"
                              IsEnabled="{Binding InstantChanges,Converter={StaticResource BooleanInverter}}"/>
                </ContextMenu>
            </Border.ContextMenu>
            <Grid>
                <Image HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ImagePreview" />
                <StackPanel Grid.Row="1" Grid.Column="3" Grid.RowSpan="4" Orientation="Horizontal"
                            HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="PreviewGrid"
                            PreviewDrop="Preview_PreviewDrop" AllowDrop="True"
                            Visibility="{Binding ShowPreviewGrid,Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
        </Border>

        <!--Menu-->
        <ScrollViewer Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                      local:ScrollAnimationBehavior.IsEnabled="True"
                      local:ScrollAnimationBehavior.TimeDuration="00:00:00.10"
                      local:ScrollAnimationBehavior.PointsToScroll="40" 
                      FocusVisualStyle="{x:Null}" Margin="0,0,-5,0"
                      VerticalScrollBarVisibility="Auto" CanContentScroll="True">
            <Grid Margin="0,0,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- column 1-->
                <!--Cool buttons from Dopamine player-->
                <StackPanel Grid.Column="0" Width="145" Margin="0,5" >
                    <Button Style="{StaticResource TransparentRoundedButton}" Content="Browse Files" Margin="0,5,0,5" 
                            x:Name="BrowseFilesBtn" Height="40" FontSize="15" Command="{Binding BrowseFilesCommand}">
                        <Button.ToolTip>
                            <ToolTip Style="{StaticResource CustomToolTip}" x:Name="BrowseFilesToolTip" Content="Browse local Files" FontSize="12" />
                        </Button.ToolTip>
                    </Button>
                    <Grid Height="25" Margin="5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton Style="{StaticResource TransparentRoundedToggleButtonSmall}"
                                      Content="3 Bit" Grid.Column="0" Width="64" Height="25" HorizontalAlignment="Left"
                                      FontSize="12" x:Name="ToggleBtn_3BitColor" Click="ColorDepthOption_Clicked"
                                      ToolTip="Works with &quot;Monospace&quot; font.&#x0a;Use this for vanilla SE">
                        </ToggleButton>
                        <ToggleButton Style="{StaticResource TransparentRoundedToggleButtonSmall}"
                                      Content="5 Bit" Grid.Column="1" Width="64" Height="25" HorizontalAlignment="Right"
                                      FontSize="12" x:Name="ToggleBtn_5BitColor" Click="ColorDepthOption_Clicked"
                                      ToolTip="Requires the &quot;Mono Color&quot; mod and &quot;Mono Color&quot; font">
                        </ToggleButton>
                    </Grid>
                    <ToggleButton Style="{StaticResource TransparentRoundedToggleButtonSmall}"
                                  Content="Dithering" Margin="5,5" Height="25"
                                  FontSize="12" IsChecked="{Binding EnableDithering}"
                                  ToolTip="Applies Floyd-Steinberg error diffusion during conversion.&#x0a;Helps with color banding issues.">
                    </ToggleButton>
                    <Grid Margin="5">
                        <Border Background="#05FFFFFF" CornerRadius="4" BorderThickness="0" />
                        <Label Margin="0,2" Content="Scaling Modes" Foreground="White" HorizontalContentAlignment="Center" VerticalAlignment="Top" />
                        <StackPanel Margin="0,30,0,0">
                            <ToggleButton Style="{StaticResource TransparentRoundedToggleButtonSmall}" x:Name="ToggleBtn_ScaleNearest"
                                          Content="Nearest" Height="25" Width="125" Margin="0,3,0,3" Click="ScaleOption_Clicked"
                                          ToolTip="&apos;Lowest quality&apos;. Leaves jagged edges.&#x0a;May be better for extremely low resolution images">
                            </ToggleButton>
                            <ToggleButton Style="{StaticResource TransparentRoundedToggleButtonSmall}" x:Name="ToggleBtn_ScaleBilinear"
                                          Content="Bilinear" Height="25" Width="125" Margin="0,2,0,3" Click="ScaleOption_Clicked" />
                            <ToggleButton Style="{StaticResource TransparentRoundedToggleButtonSmall}" x:Name="ToggleBtn_ScaleBicubic"
                                          Content="Bicubic" Height="25" Width="125" Margin="0,2,0,5" Click="ScaleOption_Clicked"
                                          ToolTip="&apos;Highest quality&apos;">
                            </ToggleButton>
                        </StackPanel>
                    </Grid>
                    <Grid Margin="5">
                        <Border Background="#05FFFFFF" CornerRadius="4" BorderThickness="0" />
                        <StackPanel>
                            <Label Margin="0,2,0,0" Grid.ColumnSpan="2" Content="Image Controls" Foreground="White" HorizontalContentAlignment="Center" VerticalAlignment="Top" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Style="{StaticResource TransparentRoundedButtonSmall}" Width="38" Height="30" 
                                        FontSize="15" Content="⮁" Margin="0,5,0,5"
                                        Command="{Binding ImageTransformCommand}"
                                        CommandParameter="{x:Static drawing:RotateFlipType.RotateNoneFlipY}"
                                        ToolTip="Flip Vertically">
                                </Button>
                                <Button Style="{StaticResource TransparentRoundedButtonSmall}" Width="38" Height="30" FontSize="15" 
                                        Content="⮂" Margin="3,5,3,5"
                                        Command="{Binding ImageTransformCommand}"
                                        CommandParameter="{x:Static drawing:RotateFlipType.RotateNoneFlipX}"
                                        ToolTip="Flip Horizontally">
                                </Button>
                                <Button Style="{StaticResource TransparentRoundedButtonSmall}" 
                                        Width="38" Height="30" FontSize="15" Content="⭮" 
                                        Margin="0,5,0,5"
                                        Command="{Binding ImageTransformCommand}"
                                        CommandParameter="{x:Static drawing:RotateFlipType.Rotate90FlipNone}"
                                        ToolTip="Rotate 90°">
                                </Button>
                            </StackPanel>
                            <Button Style="{StaticResource TransparentRoundedButtonSmall}"
                                    Width="125" Height="25"
                                    Margin="0,0,0,5" Content="Zoom to Fit"
                                    Command="{Binding ZoomToFitCommand}" />
                            <Button Style="{StaticResource TransparentRoundedButtonSmall}"
                                    Width="125" Height="25"
                                    Margin="0,0,0,5" Content="Zoom to Fill"
                                    Command="{Binding ZoomToFillCommand}" />
                            <Button Style="{StaticResource TransparentRoundedButtonSmall}"
                                    Width="125" Height="25"
                                    Margin="0,0,0,5" Content="Reset Zoom &amp; Pan"
                                    Command="{Binding ResetZoomAndPanCommand}" />
                        </StackPanel>
                    </Grid>
                </StackPanel>

                <!--Column 2-->
                <StackPanel Grid.Column="2" Width="145" Margin="0,5">
                    <ToggleButton Style="{StaticResource TransparentRoundedToggleButtonSmall}"
                                  Content="Instant Mode" Margin="5,20,5,0"
                                  Height="25" IsChecked="{Binding InstantChanges}"
                                  ToolTip="Apply Changes Instantly">
                    </ToggleButton>
                    <!--Custom LCD Size Box-->
                    <Grid Height="61" Margin="5,9,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Background="#05FFFFFF" Grid.ColumnSpan="3" Grid.RowSpan="2" CornerRadius="4" BorderThickness="0" />
                        <TextBlock Grid.ColumnSpan="2" Text="Custom LCD Size" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <controls:ScrollablePositiveIntegerTextBox
                            Background="#25303030" Grid.Column="0" Grid.Row="1" Margin="0,2,0,0"
                            VerticalAlignment="Top" VerticalContentAlignment="Center" BorderBrush="#505050"
                            Height="20" Width="45" HorizontalAlignment="Center"
                            ContextMenu="{x:Null}"
                            MouseEnter="MenuTextBox_MouseEnteredOrLeft" MouseLeave="MenuTextBox_MouseEnteredOrLeft"
                            Value="{Binding LCDWidth}"
                            Minimum="1" Maximum="999" ScrollChange="1"
                            ToolTip="Width">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Foreground" Value="DarkGray" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LCDPresetType}" Value="Custom">
                                            <Setter Property="Foreground" Value="White" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </controls:ScrollablePositiveIntegerTextBox>
                        <controls:ScrollablePositiveIntegerTextBox
                            Background="#25303030" Grid.Column="1" Grid.Row="1" Margin="0,2,0,0"
                            VerticalAlignment="Top" VerticalContentAlignment="Center" BorderBrush="#505050"
                            Height="20" Width="45" HorizontalAlignment="Center"
                            ContextMenu="{x:Null}"
                            MouseEnter="MenuTextBox_MouseEnteredOrLeft" MouseLeave="MenuTextBox_MouseEnteredOrLeft"
                            Value="{Binding LCDHeight}"
                            Minimum="1" Maximum="999" ScrollChange="1"
                            ToolTip="Height">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Foreground" Value="DarkGray" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LCDPresetType}" Value="Custom">
                                            <Setter Property="Foreground" Value="White" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </controls:ScrollablePositiveIntegerTextBox>
                        <Label Content="x" Foreground="DarkGray" HorizontalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,7" VerticalAlignment="Bottom" Height="25"/>
                    </Grid>
                    <ToggleButton Content="LCD Panel" Margin="5,5,5,5" Height="25" FontSize="12" 
                                  Command="{Binding SetLCDSizeCommand}"
                                  ToolTip="178x178">
                        <ToggleButton.CommandParameter>
                            <x:Array Type="{x:Type sys:Int32}">
                                <sys:Int32>178</sys:Int32>
                                <sys:Int32>178</sys:Int32>
                            </x:Array>
                        </ToggleButton.CommandParameter>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource TransparentRoundedToggleButtonSmall}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LCDPresetType}" Value="LCDPanel">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ToggleButton Content="Text Panel" Margin="5,0,5,5" Height="25" FontSize="12" 
                                  Command="{Binding SetLCDSizeCommand}"
                                  ToolTip="178x107">
                        <ToggleButton.CommandParameter>
                            <x:Array Type="{x:Type sys:Int32}">
                                <sys:Int32>178</sys:Int32>
                                <sys:Int32>107</sys:Int32>
                            </x:Array>
                        </ToggleButton.CommandParameter>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource TransparentRoundedToggleButtonSmall}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LCDPresetType}" Value="TextPanel">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ToggleButton Content="Wide LCD Panel (Wide)" Margin="5,0,5,5" Height="25" FontSize="12" 
                                  Command="{Binding SetLCDSizeCommand}"
                                  ToolTip="356x178">
                        <ToggleButton.CommandParameter>
                            <x:Array Type="{x:Type sys:Int32}">
                                <sys:Int32>356</sys:Int32>
                                <sys:Int32>178</sys:Int32>
                            </x:Array>
                        </ToggleButton.CommandParameter>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource TransparentRoundedToggleButtonSmall}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LCDPresetType}" Value="WideLCDPanel">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ToggleButton Content="Wide LCD Panel (Tall)" Margin="5,0,5,5" Height="25" FontSize="12" 
                                  Command="{Binding SetLCDSizeCommand}"
                                  ToolTip="178x356">
                        <ToggleButton.CommandParameter>
                            <x:Array Type="{x:Type sys:Int32}">
                                <sys:Int32>178</sys:Int32>
                                <sys:Int32>356</sys:Int32>
                            </x:Array>
                        </ToggleButton.CommandParameter>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource TransparentRoundedToggleButtonSmall}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LCDPresetType}" Value="WideLCDPanelTall">
                                        <Setter Property="IsChecked" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Grid Height="100" Margin="5,5,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Background="#05FFFFFF" Grid.ColumnSpan="3" Grid.RowSpan="3" CornerRadius="4" BorderThickness="0" />
                        <controls:ScrollablePositiveIntegerTextBox
                            Background="#25303030" Grid.Column="0" Grid.Row="1" Margin="0,2,0,0" Text="1"
                            VerticalAlignment="Top" VerticalContentAlignment="Center" BorderBrush="#505050" Foreground="White"
                            Height="20" Width="35" HorizontalAlignment="Center"
                            ContextMenu="{x:Null}"
                            MouseEnter="MenuTextBox_MouseEnteredOrLeft" MouseLeave="MenuTextBox_MouseEnteredOrLeft"
                            Value="{Binding ImageSplitWidth}"
                            Minimum="1" Maximum="9" ScrollChange="1"
                            ToolTip="Width">
                        </controls:ScrollablePositiveIntegerTextBox>
                        <Label Grid.ColumnSpan="2" Content="Split Image" Foreground="White" HorizontalContentAlignment="Center" VerticalAlignment="Center" />
                        <Label Content="by" Foreground="DarkGray" HorizontalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,7" VerticalAlignment="Bottom" Height="25"/>
                        <controls:ScrollablePositiveIntegerTextBox
                            Background="#25303030" Grid.Column="1" Grid.Row="1" Margin="0,2,0,0" Text="1"
                            VerticalAlignment="Top" VerticalContentAlignment="Center" BorderBrush="#505050" Foreground="White"
                            Height="20" Width="35" HorizontalAlignment="Center"
                            ContextMenu="{x:Null}"
                            MouseEnter="MenuTextBox_MouseEnteredOrLeft" MouseLeave="MenuTextBox_MouseEnteredOrLeft"
                            Value="{Binding ImageSplitHeight}"
                            Minimum="1" Maximum="9" ScrollChange="1"
                            ToolTip="Height">
                        </controls:ScrollablePositiveIntegerTextBox>
                        <ToggleButton Style="{StaticResource TransparentRoundedToggleButtonSmall}"
                                      Content="Show Grid" Margin="0,0,0,5" Height="25" Width="125" Grid.Row="2" Grid.ColumnSpan="2"
                                      FontSize="12" IsChecked="{Binding ShowPreviewGrid}"
                                      ToolTip="Show the split squares to copy.">
                        </ToggleButton>
                    </Grid>
                </StackPanel>
            </Grid>
        </ScrollViewer>

        <Button Style="{StaticResource TransparentRoundedButton}" x:Name="ConvertBtn"
                Content="Convert" Grid.Row="4" Grid.Column="1" Margin="0,5,0,0"
                Width="145" Height="40" FontSize="15" VerticalAlignment="Top"
                Command="{Binding ConvertImageCommand}">
            <Button.ToolTip>
                <ToolTip Style="{StaticResource CustomToolTip}" Content="" x:Name="ConvertBtnToolTip" />
            </Button.ToolTip>
        </Button>

        <Button Style="{StaticResource TransparentRoundedButton}" x:Name="CopyToClipBtn"
                Content="Copy to Clipboard" Grid.Row="4" Grid.Column="2" Margin="0,5,0,0"
                Width="145" Height="40" FontSize="15" VerticalAlignment="Top"
                Command="{Binding CopyImageToClipboardCommand}">
        </Button>
    </Grid>
</Window>
